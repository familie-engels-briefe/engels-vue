user nginx;
worker_processes auto;
pid /run/nginx.pid;

include /etc/nginx/modules-enabled/*.conf;

events {
    worker_connections 768;
    multi_accept on;
}

http {
    ##
    # Basic Settings
    ##
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    server_tokens off;

    server_names_hash_bucket_size 64;
    server_name_in_redirect off;

    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    ##
    # SSL Settings
    ##
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2; # Dropping SSLv3, ref: POODLE
    ssl_ciphers 'kEECDH+ECDSA+AES128 kEECDH+ECDSA+AES256 kEECDH+AES128 kEECDH+AES256 kEDH+AES128 kEDH+AES256 DES-CBC3-SHA +SHA !aNULL !eNULL !LOW !kECDH !DSS !MD5 !RC4 !EXP !PSK !SRP !CAMELLIA !SEED'; # Score=90 (recommended)
    ssl_prefer_server_ciphers on;
    # add HSTS header
    # add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;

    # OCSP stapling
    ssl_stapling on; # allow Nginx to send OCSP results during the connection process
    ssl_stapling_verify on;
    resolver 8.8.8.8 8.8.4.4 valid=300s; #Google DNS, use any of your choice
    resolver_timeout 10s;

    ##
    # Logging Settings
    ##
    map $remote_addr $ip_anonym1 {
        default 0.0.0;
        "~(?P<ip>(\d+)\.(\d+)\.(\d+))\.\d+" $ip;
        "~(?P<ip>[^:]+:[^:]+):" $ip;
    }

    map $remote_addr $ip_anonym2 {
        default .0;
        "~(?P<ip>(\d+)\.(\d+)\.(\d+))\.\d+" .0;
        "~(?P<ip>[^:]+:[^:]+):" ::;
    }

    map $ip_anonym1$ip_anonym2 $ip_anonymized {
        default 0.0.0.0;
        "~(?P<ip>.*)" $ip;
    }

    log_format anonymized '$ip_anonymized - $remote_user [$time_local] "$request" '
       '$status $body_bytes_sent "$http_referer" '
       '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /dev/stdout anonymized;
    error_log /dev/stderr;

    ##
    # Gzip Settings
    ##
    gzip on;

    ##
    # Virtual Host Configs
    ##
    upstream api {
        server api:9000;
    }

    upstream wordpress {
        server wordpress:9000;
    }

    server {
        listen 80;
        listen [::]:80;

        server_name chost20.zim.uni-wuppertal.de;
        return 301 https://chost20.zim.uni-wuppertal.de$request_uri;
    }

    server {
        listen    443 ssl;
        listen    [::]:443 ssl;

        ssl_certificate /etc/nginx/ssl/fullchain.pem;
        ssl_certificate_key /etc/nginx/ssl/privkey.pem;

        server_name chost20.zim.uni-wuppertal.de;

        root /var/www;

        index index.php index.html;

        location ^~ /api {
            alias /var/www/api/public;

            try_files $uri $uri/ @api;

            # Enable CORS for GET requests
            add_header 'Access-Control-Allow-Origin' '*';
            add_header 'Access-Control-Allow-Methods' 'GET, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
            add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';

            location ~ \.php$ {
                fastcgi_split_path_info ^(.+\.php)(/.+)$;
                fastcgi_pass api;
                fastcgi_index index.php;
                include /etc/nginx/fastcgi_params;
                fastcgi_param SCRIPT_FILENAME $request_filename;
                fastcgi_param APPLICATION_ENV production;
                fastcgi_intercept_errors off;
                fastcgi_read_timeout 360;
            }
        }

        location @api {
            rewrite /api/(.*)$ /api/index.php?/ last;
        }

        location /engels {
            alias /var/www/static/;

            index index.html index.htm;
        }

        charset utf-8;

        location ~ ^/\. {
            deny all;
            access_log off;
            log_not_found off;
        }

        location = /robots.txt {
            access_log off;
            log_not_found off;
        }

        location = /favicon.ico {
            access_log off;
            log_not_found off;
        }

        add_header Content-Security-Policy "frame-ancestors 'self'";
        # Prevent clickjacking attacks
        add_header X-Frame-Options DENY;
        # Prevent "mime" based attacks
        add_header X-Content-Type-Options nosniff;
        # Prevent XSS attacks
        add_header X-XSS-Protection "1; mode=block";
    }
}
